name: Build and publish wheels

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macos-latest]
        platform: [x64]

    env:
      REPO_DIR: httpstan
      BUILD_COMMIT: 4.0.0
      BUILD_DEPENDS: ""
      MB_PYTHON_VERSION: ${{ matrix.python-version }}
      # test dependencies from the [tool.poetry.dev-dependencies] section in pyproject.toml
      TEST_DEPENDS: "pytest~=5.4 pytest-cov~=2.8 pytest-asyncio<0.11,>=0.10 apispec[yaml,validation]~=3.1"
      MB_ML_VER: "2014"
      DOCKER_TEST_IMAGE: "multibuild/xenial_x86_64"
      MACOSX_DEPLOYMENT_TARGET: "10.9"

      TRAVIS_PYTHON_VERSION: ${{ matrix.python-version }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      TRAVIS_BRANCH: ${{ github.head_ref }}
      TRAVIS_PULL_REQUEST: ${{ github.event.number }}
      TRAVIS_BUILD_DIR: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install virtualenv
        run: |
          python -m pip install --upgrade pip
          pip install virtualenv
      - name: Set multibuild environment variables
        run: |
          if [ "x32" == "${{ matrix.platform }}" ]; then echo "PLAT=i686" >> $GITHUB_ENV; else echo "PLAT=x86_64" >> $GITHUB_ENV; fi
          if [ "macos-latest" == "${{ matrix.os }}" ]; then echo "TRAVIS_OS_NAME=osx" >> $GITHUB_ENV; else echo "TRAVIS_OS_NAME=${{ matrix.os }}" >> $GITHUB_ENV; fi
      - name: Print environment variables
        run: |
          echo "TRAVIS_BRANCH: ${TRAVIS_BRANCH}"
          echo "TRAVIS_PULL_REQUEST: ${TRAVIS_PULL_REQUEST}"
          echo "TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}"
          echo "TRAVIS_EVENT_TYPE: ${TRAVIS_EVENT_TYPE}"
          echo "TRAVIS_OS_NAME: ${TRAVIS_OS_NAME}"
          echo "PLAT: ${PLAT}"
          echo "DOCKER_TEST_IMAGE: ${DOCKER_TEST_IMAGE}"
          echo "BUILD_DEPENDS: ${BUILD_DEPENDS}"
          echo "TEST_DEPENDS: ${TEST_DEPENDS}"
      - name: Build and install wheels
        run: |
          source multibuild/common_utils.sh
          source multibuild/travis_steps.sh
          echo "------- BEFORE INSTALL --------"
          before_install
          echo "------- CLEAN CODE --------"
          clean_code $REPO_DIR $BUILD_COMMIT
          echo "------- BUILD WHEEL --------"
          build_wheel $REPO_DIR $PLAT
          echo "------- INSTALL_RUN --------"
          install_run $PLAT
      - name: Upload wheels
        if: always()
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [[ $GITHUB_EVENT_NAME != "pull_request" ]]; then
            python3 -m pip install twine
            python3 -m twine upload --skip-existing -u __token__ -p "$PYPI_TOKEN" ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl
          else
            echo "This build is connected to a pull request. Not uploading to PyPI."
          fi
